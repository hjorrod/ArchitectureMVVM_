apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.inditex.architecturemvvm"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        //Auth
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'myapp'
        ]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", "\"https://api.example.com/\""
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            debuggable true
            testCoverageEnabled = true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        //https://developer.android.com/studio/known-issues#variant_output
        //variant.outputs.all {
        //    outputFileName = "YOURKEYPROJECT-${variant.name}-${variant.versionName}.apk"
        //}
        for (flavor in variant.productFlavors) {
            def outputFileName
            if (variant.name == "PRO") {
                outputFileName = "${projectId}.apk"
            } else {
                outputFileName = "${projectId}-" + flavorName + "-" + variant.buildType.name + ".apk"
            }
            if (outputFileName != null && !outputFileName.isEmpty()) {
                variant.outputs[0].outputFileName = outputFileName
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    //Auth
    implementation 'com.inditex.lfwkauth:lfwkauth:2.2.1'
    //Push
    implementation 'com.inditex.messgand:messgand:3.5.0'
    //Log
    implementation 'com.inditex.lfwkgray:lfwkgray:2.11.0'
    implementation 'com.inditex.lfwkdevi:lfwkdevi:2.3.1'
    // Shared pinning and network config for architecture libraries
    implementation 'com.inditex.lfwknets:lfwknets:1.2.0'

    // Kotlin version
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Hilt for DI
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Picasso
    implementation "com.squareup.picasso:picasso:$piccasso"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Http Client (OKHTTP)
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.google.code.gson:gson:$gson"

    // Room - Database
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation "com.google.firebase:firebase-firestore"
    implementation "com.google.firebase:firebase-storage"
    implementation "com.google.firebase:firebase-database"
    implementation "com.google.firebase:firebase-config-ktx"
    implementation "com.google.firebase:firebase-analytics-ktx"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}